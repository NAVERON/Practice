
# 一般情况下  windows环境开发, 使用树莓派当作后台服务器比较方便, 平衡使用和环境部署之间的问题 

# 特殊设置的覆盖 
server.port = 8888

# logging configs  日志系统设置   配置一个新的profile 需要在logfile中更新设置 
logging.file.name = logback.log
logging.file.path = logs
logging.level.root = info
logging.pattern.console = %d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %msg%n
logging.pattern.file = %d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %msg%n
# logging.config = classpath:logback-spring.xml

# 数据库角色
spring.datasource.url = jdbc:mysql://192.168.101.52:3306/practice?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimeZone=UTC
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.username = open
spring.datasource.password = wangyulong

# redis 密码 
spring.redis.host = 192.168.101.52
spring.redis.port = 6379
spring.redis.password = wangyulong

# email 邮箱账户 新浪客户端授权码  9201df84ec45bdc2 
spring.mail.username = naveron@sina.com
spring.mail.password = 9201df84ec45bdc2
# security pass 
# spring.security.user.name = wangyulong
# spring.security.user.password = wangyulong

# Kafka configuration 
# client-id: # 发送请求时传给服务器的id
# 会覆盖 spring.kafka.bootstrap-servers 配置   生产者的相关配置 
spring.kafka.producer.bootstrap-servers = 192.168.101.52:9092
spring.kafka.producer.client-id = 3
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
# 消费者相关配置：spring.kafka.consumer.*
spring.kafka.consumer.bootstrap-servers = 192.168.101.52:9092
spring.kafka.consumer.group-id = "kafka-test"
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer

# zookeeper config 
spring.zookeeper.server.url = 192.168.101.52:2181
spring.zookeeper.connection.timeout = 2000









