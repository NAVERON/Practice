
# ubuntu 平台上有现成环境, 可以直接使用这个配置文件

# 特殊设置的覆盖 
server.port = 8888

# 数据库角色
spring.datasource.username = open
spring.datasource.password = wangyulong

# redis 密码 
spring.redis.password = wangyulong

# email 邮箱账户 新浪客户端授权码  9201df84ec45bdc2 
spring.mail.host = smtp.sina.com
spring.mail.port = 25
spring.mail.protocol = smtp
spring.mail.username = naveron@sina.com
spring.mail.password = 9201df84ec45bdc2
# security pass 
# spring.security.user.name = wangyulong
# spring.security.user.password = wangyulong

# ubuntu本地kafk环境测试 spring boot kafka 配置 
# client-id: # 发送请求时传给服务器的id
# 会覆盖 spring.kafka.bootstrap-servers 配置   生产者的相关配置 
spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.client-id = 1
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
# 消费者相关配置：spring.kafka.consumer.*
spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id = "kafka-test"
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer

# zookeeper config 
spring.zookeeper.server.url = localhost:2181
spring.zookeeper.connection.timeout = 2000












